@startuml

skinparam classAttributeIconSize 0
left to right direction

package GGrach.Multiregionality {

    namespace Exception {
        class CreateRegionsIblockException {
            ---
            Ошибка создания инфоблока для работы модуля
        }

        class BitrixRedactionException {
            ---
            Ошибка редакции, версии битрикса
        }

        class DeterminateRegionException {
            ---
            Ошибки определения региона (двойной регион и тп)
        }
    }

    namespace Cache {
        class RuntimeCache {
        }
    }

    namespace Contract {
        interface IRegionDeterminator {
        }
    }

    namespace Configurator {
        class RegionsConfigurator {
            + {static} const IBLOCK_REGIONS_CODE
            + {static} const COOKIE_NOW_REGION_NAME
            + {static} const URL_CODE_REGION = 'URL'
            ---
            Храним различные конфигурации
        }
    }

    namespace Event {
        class OnEndBufferContent {
            +listen()
            ---
            Заменяем плейсхолдеры на странице, вставляем JS исходя из PHP
        }
    }

    namespace Repository {
        class RegionsRepository {
            +create()
            ---
            Обертка над базой данных для удобства
        }
    }

    namespace Utils {
        class UrlParser {
            + {static} parse(string $url = null): array
            ---
            Парсит url и возвращает части
        }

        class UrlNormalizer {
            + {static} normalize(string $url = null): string
            ---
            Нормализует url
        }

        class RegionChunksTextCorrector {
            + {static} correct(string $text, Facade/RegionsFacade $facade)
            ---
            Заменяет плейсхолдеры на странице
        }
    }

    namespace Determinator {
        class RegionDeterminator {
            ---
            Определяет текущий регион
        }
    }

    namespace Facade {
        class Regions {
            + constructor(string $url = null)
            + getNowRegionData()
            + getRegionsData() as m1
            ---
            Высокоуровневые операции
        }

        note bottom of Facade.Regions
            В конструкторе определяем регион исходя из $url
            Если его не передали - то берем REQUEST_URI
        end note
    }

    Exception.DeterminateRegionException ..>  Determinator.RegionDeterminator
    Exception.CreateRegionsIblockException ..>  Repository.RegionsRepository
    Utils.UrlNormalizer ..>  Facade.Regions
    Utils.RegionChunksTextCorrector ..>  Event.OnEndBufferContent
    Configurator.RegionsConfigurator ..>  Repository.RegionsRepository
    Configurator.RegionsConfigurator ..>  Event.OnEndBufferContent
    Cache.RuntimeCache ..>  Determinator.RegionDeterminator
    Determinator.RegionDeterminator ..>  Contract.IRegionDeterminator
    Determinator.RegionDeterminator o-- Repository.RegionsRepository
    Facade.Regions --o Utils.RegionChunksTextCorrector
    Repository.RegionsRepository --|> Bitrix.Main.Entity.DataManager
}

@enduml
